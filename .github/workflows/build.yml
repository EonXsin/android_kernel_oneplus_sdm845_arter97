name: Build OnePlus 6 and 6t KernelSU Kernel
on:
  workflow_dispatch:
  push:
    branches:
      - HEAD
  pull_request:
      branches:
      - HEAD

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      CCACHE_COMPILERCHECK: "%compiler% -dumpmachine; %compiler% -dumpversion"
      CCACHE_NOHASHDIR: "true"
      CCACHE_MAXSIZE: "2G"
      CCACHE_HARDLINK: "true"
      KERNEL_DEFCONFIG: "sdm845_defconfig"
      KERNEL_CMDLINE: "ARCH=arm64 CC=clang CLANG_TRIPLE=aarch64-linux-gnu- CROSS_COMPILE=aarch64-linux-gnu- CROSS_COMPILE_ARM32=arm-linux-gnueabi- O=out"
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        submodules: 'true'
        fetch-depth: 100

    - name: Set up ccache
      uses: hendrikmuhs/ccache-action@v1.2

    - name: Install dependencies
      run: |
        sudo apt-get update -y 
        sudo apt install gcc-aarch64-linux-gnu -y
        sudo apt install gcc-arm-linux-gnueabi -y
        sudo apt install -y curl libisl-dev binutils-aarch64-linux-gnu python2 wget vim git ccache automake flex lzop bison gperf build-essential zip zlib1g-dev g++-multilib libxml2-utils bzip2 libbz2-dev libbz2-1.0 libghc-bzlib-dev squashfs-tools pngcrush schedtool dpkg-dev liblz4-tool make optipng maven libssl-dev pwgen libswitch-perl policycoreutils minicom libxml-sax-base-perl libxml-simple-perl bc libc6-dev-i386 lib32ncurses5-dev x11proto-core-dev libx11-dev lib32z-dev libgl1-mesa-dev xsltproc unzip device-tree-compiler kmod python3 python3-pip
        git clone https://github.com/arter97/arm32-gcc.git gcc-32 --depth=1
        git clone https://github.com/arter97/arm64-gcc.git gcc-64 --depth=1
        git clone https://github.com/Coconutat/AnyKernel3_Backup -b Op6_KSU --depth=1
        rm -rf AnyKernel3/.git
    
    - name: GetTime
      id: get_time
      run: |
        echo "TIME=$(TZ=UTC+5:30 date +%m%d%H%M )" >> $GITHUB_OUTPUT
    - name: Build Kernel-With-KernelSU
      run: |
        rm -rf KernelSU
        rm -rf drivers/kernelsu
        curl -LSs "https://raw.githubusercontent.com/tiann/KernelSU/main/kernel/setup.sh" | bash -s main
        export PATH=$(pwd)/gcc-64/bin:$(pwd)/gcc-32/bin:$PATH
        make -j$(nproc --all) O=out ARCH=arm64 CROSS_COMPILE=aarch64-none-elf- CROSS_COMPILE_ARM32=arm-none-eabi- sdm845_defconfig
        make -j$(nproc --all) O=out ARCH=arm64 CROSS_COMPILE=aarch64-none-elf- CROSS_COMPILE_ARM32=arm-none-eabi-
        cp out/arch/arm64/boot/Image.gz-dtb AnyKernel3_Backup
    - name: Upload Kernel-SU
      uses: actions/upload-artifact@v3
      with:
        name: Arter_plus_kernel+proton_clang_op6-KSU-${{ steps.get_time.outputs.TIME }}
        path: "AnyKernel3_Backup/*"
